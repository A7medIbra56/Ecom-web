"""
Django settings for base project.

Generated by 'django-admin startproject' using Django 4.2.14.

For more information on this file, see:
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see:
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from decouple import config

# Ecommerce settings
STRIPE_PUB_KEY = 'pk_test_51HIHiuKBJV2qfWbD2gQe6aqanfw6Eyul5P02KeOuSR1UMuaV4TxEtaQyzr9DbLITSZweL7XjK3p74swcGYrE2qEX00Hz7GmhMI'
STRIPE_SECRET_KEY = 'sk_test_51HIHiuKBJV2qfWbD4I9pAODack7r7r9LJOY65zSFx7jUUwgy2nfKEgQGvorv1p2xP7tgMsJ5N9EW7K1lBdPnFnyK00kdrS27cj'

SESSION_COOKIE_AGE = 86400
CART_SESSION_ID = 'cart'

SITE_ID = 1


##############################################
# 1. BASE DIRECTORY & PATH CONFIGURATION
##############################################
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

##############################################
# 2. SECURITY & DEBUG SETTINGS
##############################################
SECRET_KEY = config('SECRET_KEY')
DEBUG = True
DEBUG_CACHING = False
REDIS_CACHE_ENABELED = False
MAILTRAP_FAKE_SMTP_MAIL = True

if DEBUG:
    BASE_URL = '127.0.0.1:8000'
    ALLOWED_HOSTS = ["*"]
    CORS_ALLOWED_ORIGINS = [
        "http://127.0.0.1:8000",
        "http://example.com",
    ]
    INTERNAL_IPS = [
        '127.0.0.1',
        "*"
    ]

# Uncomment these in production to enforce security
# SESSION_COOKIE_SECURE = False
# CSRF_COOKIE_SECURE = False
# SECURE_SSL_REDIRECT = False
# SECURE_SSL_HOST = False

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default backend
    'allauth.account.auth_backends.AuthenticationBackend',  # Allauth backend
]


##############################################
# 3. APPLICATION DEFINITION
##############################################
INSTALLED_APPS = [
    # Base Project App
    "base", 
    "rest_framework",

    # Third-Party Libraries
    'django_extensions',
    'widget_tweaks',
    'captcha',
    'corsheaders',
    "compressor",
    'sass_processor',
    'htmlmin',
    # 'cachalot',
    # 'django_celery_beat',

    # Django Defaults
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.sites",
    
    # Base Apps
    "shared",
    'website',
    
    'ecommerce.users',
    'ecommerce.cart',
    'ecommerce.order',
    'ecommerce.product',
    'ecommerce.payment',
    'ecommerce.communication',
    'vendor',
    'admin_dashboard',
    
    # 'notifications', 
    
    'allauth',
    'allauth.account',
    
    'django_celery_results',    
    'django_filters',
]

if DEBUG:
    INSTALLED_APPS.insert(0, 'debug_toolbar')
    INSTALLED_APPS.insert(-1, 'django_browser_reload')


##############################################
# 4. MIDDLEWARE CONFIGURATION
##############################################
MIDDLEWARE_REST = [
    'corsheaders.middleware.CorsMiddleware',
    
    # Security Middleware
    'django.middleware.security.SecurityMiddleware',

    # WhiteNoise Middleware for static files
    "whitenoise.middleware.WhiteNoiseMiddleware",

    # Session Management
    'django.contrib.sessions.middleware.SessionMiddleware',

    # Language Management Middleware
    'django.middleware.locale.LocaleMiddleware',

    # CORS Middleware
    'corsheaders.middleware.CorsMiddleware',

    # Authentication and CSRF Protection
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',

    # Messaging and Clickjacking Protection
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Static File Compression
    'django.middleware.gzip.GZipMiddleware',

    # HTML Minification Middleware (optional)
    # 'htmlmin.middleware.HtmlMinifyMiddleware',

    # Caching Middleware (order is important)
    'django.middleware.cache.FetchFromCacheMiddleware',
    # 'htmlmin.middleware.MarkRequestMiddleware',

    # Custom Admin Base Middleware
    "shared.middleware.DashboardRoutingMiddleware",
    "shared.middleware.UserSwitchMiddleware",
    
    "allauth.account.middleware.AccountMiddleware",
]

if DEBUG:
    # Insert browser reload and debug middleware in development
    MIDDLEWARE_REST.insert(-2, "django_browser_reload.middleware.BrowserReloadMiddleware")
    MIDDLEWARE_REST.insert(-3, "debug_toolbar.middleware.DebugToolbarMiddleware")

# Select middleware ordering based on caching settings
if DEBUG and not DEBUG_CACHING:
    MIDDLEWARE = [
        'django.middleware.common.CommonMiddleware',  # Cache Disabled
        "shared.middleware.TrailingSlashMiddleware",
    ] + MIDDLEWARE_REST
else:
    MIDDLEWARE = [
        'django.middleware.common.CommonMiddleware',
        'django.middleware.cache.UpdateCacheMiddleware',
        "shared.middleware.TrailingSlashMiddleware",
    ] + MIDDLEWARE_REST

##############################################
# 5. URL & WSGI CONFIGURATION
##############################################
ROOT_URLCONF = 'base.urls'
WSGI_APPLICATION = 'base.wsgi.application'

##############################################
# 6. TEMPLATES CONFIGURATION
##############################################

# Collect messages/ folders inside each app
extra_template_dirs = [
    'admin_dashboard/messages',
    'vendor/messages',
    'website/messages',
]

ecommerce_dir = os.path.join(BASE_DIR, 'ecommerce')

for app_name in os.listdir(ecommerce_dir):
    app_path = os.path.join(ecommerce_dir, app_name)
    messages_path = os.path.join(app_path, 'messages')
    if os.path.isdir(messages_path):
        extra_template_dirs.append(ecommerce_dir)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': extra_template_dirs,  # Add global template directories here if needed
        'APP_DIRS': True,
        'OPTIONS': {
            # 'loaders': [
            #     ('django.template.loaders.cached.Loader', [
            #         'django.template.loaders.filesystem.Loader',
            #         'django.template.loaders.app_directories.Loader',
            #     ]),
            # ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'shared.context_processors.user_list',
                
                'ecommerce.product.context_processors.menu_categories',
                'ecommerce.cart.context_processors.cart'
            ],
        },
    },
]

##############################################
# 7. DATABASE CONFIGURATION
##############################################
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': "db.sqlite3",
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'your_db_name',  # Change this to your PostgreSQL database name
#         'USER': 'your_db_user',  # Change this to your PostgreSQL username
#         'PASSWORD': 'your_db_password',  # Change this to your PostgreSQL password
#         'HOST': 'localhost',  # Use 'localhost' if PostgreSQL is on the same machine
#         'PORT': '5432',  # Default PostgreSQL port
#     }
# }


##############################################
# 8. AUTHENTICATION & PASSWORD VALIDATION
##############################################
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGIN_URL = '/admin/login/'

##############################################
# 9. INTERNATIONALIZATION & TIMEZONE
##############################################
USE_I18N = True
USE_L10N = True
TIME_ZONE = 'UTC'
USE_TZ = True

LANGUAGES = [
    ('en', 'English'),
    ('ar', 'Arabic'),
]

LANGUAGE_CODE = 'en'

DEFAULT_LANGUAGE = LANGUAGE_CODE

##############################################
# 10. STATIC & MEDIA FILES CONFIGURATION
##############################################
STATIC_URL = '/static/'

# Additional static file directories (for development and shared assets)
STATICFILES_DIRS = [
    # Example: os.path.join(BASE_DIR, 'website', 'static'),
]

# Directory for collecting static files in production
STATIC_ROOT = os.path.join(BASE_DIR, 'production_static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# WhiteNoise & static files storage settings
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
# Alternatively, for compressed storage:
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Staticfiles finders for discovering static files
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'sass_processor.finders.CssFinder',
    'compressor.finders.CompressorFinder',
]

WHITENOISE_KEEP_ONLY_HASHED_FILES = True


##############################################
# 11. DEFAULT PRIMARY KEY FIELD TYPE
##############################################
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

##############################################
# 12. LOGGING CONFIGURATION
##############################################
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'django_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'log/django.log',
            'formatter': 'verbose',
        },
        'custom_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'log/debug.log',
            'formatter': 'simple',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['django_file'],
            'level': 'INFO',
            'propagate': False,
        },
        'debug_logger': {
            'handlers': ['custom_file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

if DEBUG:
    # Use console logging in debug mode
    for logger_name in LOGGING['loggers']:
        LOGGING['loggers'][logger_name]['handlers'] = ['console']

##############################################
# 13. CACHING CONFIGURATION
##############################################
CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 60 * 60 * 24 * 30
CACHE_MIDDLEWARE_KEY_PREFIX = ''

if REDIS_CACHE_ENABELED:
    # Redis caching
    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.redis.RedisCache",
            "LOCATION": "redis://127.0.0.1:6379/1",  # DB index 1 for cache
        }
    }
    
else: 
    CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache'),
        'TIMEOUT': CACHE_MIDDLEWARE_SECONDS,
    }
}    

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
#     }
# }

############################################################################################
########################## 3rd Part Apps SETTINGS & CONFIGURATION #######################
############################################################################################

##############################################
# Django All-Auth
##############################################
AUTH_USER_MODEL = 'users.User'

ACCOUNT_FORMS = {
    'signup': 'ecommerce.users.forms.CustomerSignupForm'
    }

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

ACCOUNT_EMAIL_VERIFICATION = "none"  # Options: "none", "optional", "mandatory"
# ACCOUNT_EMAIL_REQUIRED = True  # Ensure email is required for signup
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']

TEMPLATES[0]['DIRS'].append(os.path.join(BASE_DIR, 'website/templates/third_party/allauth/'))


# ACCOUNT_LOGIN_METHODS = {'email'} # Allow login with email
# SIGNUP_PASSWORD_ENTER_TWICE = False

##############################################
# Django Compressor
##############################################
COMPRESS_ENABLED = not DEBUG
COMPRESS_PRECOMPILERS = (
    ('text/x-scss', 'django_libsass.SassCompiler'),
)

SASS_PROCESSOR_INCLUDE_DIRS = [
    os.path.join(BASE_DIR, 'shared/static/shared/scss'),
]

##############################################
# SASS Processor
##############################################
SASS_PROCESSOR_ROOT = os.path.join(BASE_DIR, 'static')
SASS_PROCESSOR_ENABLED = True

##############################################
# HTML Minifier
##############################################
EXCLUDE_FROM_MINIFYING = ('admin/', 'admin/*')
HTML_MINIFY = not DEBUG
KEEP_COMMENTS_ON_MINIFYING = not DEBUG

##############################################
# CORS Header
##############################################
CORS_ALLOW_ALL_ORIGINS = True

##############################################
# Celery Configuration
##############################################
# Celery configuration for broker (Redis)
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Adjust the Redis URL if necessary

# Celery configuration for result backend (Database)
CELERY_RESULT_BACKEND = 'django-db'

# Optional: Set the task serializer to JSON for easier compatibility with databases
CELERY_TASK_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
CELERY_ENABLE_UTC = True



############################################################################################
########################## WEBSITE SPECIFIC SETTINGS & CONFIGURATION #######################
############################################################################################

##############################################
# Enviorment Confiuration
##############################################
if not DEBUG:
    BASE_URL = 'example.com'
    ALLOWED_HOSTS = ["*"]
    CORS_ALLOWED_ORIGINS = [
        "http://127.0.0.1:8000",
        "https://example.com",
    ]
    INTERNAL_IPS = [
        '127.0.0.1',
    ]


##############################################
# Email Configuration Settings
##############################################   
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_TLS = True
ACCOUNT_ADAPTER = "allauth.account.adapter.DefaultAccountAdapter"

if MAILTRAP_FAKE_SMTP_MAIL:
    EMAIL_HOST = 'sandbox.smtp.mailtrap.io'
    EMAIL_HOST_USER = '078baba38f317c'
    EMAIL_HOST_PASSWORD = '17ee44d139c014'
    EMAIL_PORT = '2525'
    DEFAULT_FROM_EMAIL = "Mail Trap SMTP <078baba38f317c>"
    
else:
    EMAIL_HOST = "smtp.gmail.com"
    EMAIL_HOST_USER = "yaso2go@gmail.com"
    EMAIL_HOST_PASSWORD = "nemy lvue vqwo byru"
    EMAIL_PORT = 587
    DEFAULT_FROM_EMAIL = "Area 13 Email test <yaso2go@gmail.com>"
    
    NO_REPLY_FROM_EMAIL = "Area 13 Email test <yaso2go@gmail.com>"
    


##############################################
# Website App Configuration
############################################## 
STATICFILES_DIRS += (os.path.join(BASE_DIR, 'website', 'static'),)

if DEBUG:
    WEBSITE_MEDIA_ROOT = os.path.join(BASE_DIR, 'website/static/website/img')
else:
    WEBSITE_MEDIA_ROOT = os.path.join(BASE_DIR, 'production_static/website/img')